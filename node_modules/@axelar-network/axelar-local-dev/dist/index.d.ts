import { createAndExport, forkAndExport } from './exportUtils';
import { relay } from './relay';
import { setLogger } from './utils';
import { testnetInfo, mainnetInfo } from './info';
import { networks } from './Network';
import { ChainCloneData, getFee, getGasPrice, listen, createNetwork, forkNetwork, getNetwork, getAllNetworks, setupNetwork, stop, stopAll, getDepositAddress } from './networkUtils';
export declare const utils: {
    deployContract: (wallet: import("ethers").Wallet, contractJson: any, args?: never[], options?: {}) => Promise<import("ethers").Contract>;
    defaultAccounts: (n: number, seed?: string) => {
        balance: bigint;
        secretKey: string;
    }[];
    setJSON: (data: any, name: string) => void;
    setLogger: typeof setLogger;
};
export { ChainCloneData, getFee, getGasPrice, listen, createNetwork, forkNetwork, getNetwork, getAllNetworks, setupNetwork, stop, stopAll, getDepositAddress, networks, testnetInfo, mainnetInfo, relay, createAndExport, forkAndExport, };
//# sourceMappingURL=index.d.ts.map